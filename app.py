import os
import shutil

# –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
persist_directory = "chroma_db"
if os.path.exists(persist_directory):
    try:
        shutil.rmtree(persist_directory)
        print("‚úÖ –•—Ä–∞–Ω–∏–ª–∏—â–µ –æ—á–∏—â–µ–Ω–æ")
    except Exception as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –±–∞–∑—É: {e}")

import streamlit as st
from document_loader import process_and_store_file, process_and_store_url
from vector_store import get_db
from qa_engine import answer_query

st.set_page_config(page_title="Kazakhstan Constitution AI Assistant")
st.title("üá∞üáø Constitution of Kazakhstan - AI Assistant")

# –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ, —Å–æ–∑–¥–∞—ë—Ç—Å—è –∑–∞–Ω–æ–≤–æ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
db = get_db()

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤
uploaded_files = st.file_uploader("Upload PDF or TXT files", accept_multiple_files=True)

# –í–≤–æ–¥ URL —Å–∞–π—Ç–æ–≤
urls_input = st.text_area("Or enter website URLs (one per line):")

if uploaded_files:
    for uploaded_file in uploaded_files:
        process_and_store_file(uploaded_file, db)
    st.success("Files processed and stored successfully.")

if urls_input:
    urls = [url.strip() for url in urls_input.split('\n') if url.strip()]
    for url in urls:
        try:
            process_and_store_url(url, db)
        except Exception as e:
            st.error(f"Error processing URL {url}: {e}")
    st.success("URLs processed and stored successfully.")

# –í–≤–æ–¥ –≤–æ–ø—Ä–æ—Å–∞
query = st.text_input("Ask a question about the Constitution or your uploaded documents:")
if query:
    response = answer_query(query, db)
    st.markdown("### ü§ñ Answer")
    st.write(response)